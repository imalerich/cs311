package cs311.hw7.graph;

import java.util.ArrayList;
import java.util.List;

import org.junit.Test;
import static org.junit.Assert.*;

import cs311.hw7.graph.IGraph.Vertex;
import cs311.hw7.graphalgorithms.GraphAlgorithms;

public class MalerichAlgorithmTests {

	@Test public void testTopoSort0() {
		Graph<String, String> test = new Graph<String, String>();
		test.setDirectedGraph();

		test.addVertex("A");
		test.addVertex("B");
		test.addVertex("C");
		
		test.addEdge("B", "A");
		test.addEdge("A", "C");
		
		List<Vertex<String>> l = GraphAlgorithms.<String, String>TopologicalSort(test);
		ArrayList<String> arr = new ArrayList<String>();
		for (Vertex<String> v : l) {
			arr.add(v.getVertexName());
		}
		
		// There is only one ordering for this topological sort (A, B, C).
		assertEquals("B", arr.get(0));
		assertEquals("A", arr.get(1));
		assertEquals("C", arr.get(2));
	}
	
	@Test public void testTopoSort1() {
		Graph<String, String> test = new Graph<String, String>();
		test.setDirectedGraph();

		test.addVertex("A");
		test.addVertex("B");
		test.addVertex("C");
		
		test.addEdge("B", "A");
		test.addEdge("A", "C");
		
		List<Vertex<String>> l = GraphAlgorithms.<String, String>TopologicalSort(test);
		ArrayList<String> arr = new ArrayList<String>();
		for (Vertex<String> v : l) {
			arr.add(v.getVertexName());
		}
		
		// There is only one ordering for this topological sort (A, B, C).
		assertEquals("B", arr.get(0));
		assertEquals("A", arr.get(1));
		assertEquals("C", arr.get(2));
	}
}