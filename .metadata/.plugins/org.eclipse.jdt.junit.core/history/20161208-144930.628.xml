<?xml version="1.0" encoding="UTF-8"?><testrun name="AllTests" project="Homework7" tests="64" started="64" failures="0" errors="1" ignored="0">
  <testsuite name="cs311.hw7.graph.AllTests" time="0.0">
    <testcase name="addVertex1" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="getNeighborsDirected" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="SetUndirectedGraph" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="addVertexDup" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="getNeighborsUndirected" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="addEdge1" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="addEdge" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="setEdgeData" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="getEdgeData" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="HeadlessMan1" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="HeadlessMan2" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="HeadlessMan3" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="HeadlessMan4" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="HeadlessMan5" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="HeadlessMan6" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="HeadlessMan7" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="Explosion1" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="Explosion2" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="Explosion3" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="Explosion4" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="kruscal" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="getVertexData" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="getEdge" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="AddVertex1" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="AddVertex2" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="AddVertex3" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="AddVertex4" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="TPS0" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="TPS1" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="TPS2" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="TPS3" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="TPS4" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="TPS5" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="TPS6" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="TPS7" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="addEdgeBad" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="addEdgeDup" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="ATPS1" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="ATPS2" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="ATPS3" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="ATPS4" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="addVertex" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="getVertices" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="addVertexDup1" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="LinkedList1" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="LinkedList2" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="LinkedList3" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="LinkedList4" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="LinkedList5" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="LinkedList6" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="LinkedList7" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="LinkedList8" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="SetDirectedGraph" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="addEdgeDup2Directed" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="addEdgeDup1" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="addEdgeDup2" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="setVertexData" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="setUndirectedGraph" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="getVertex" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="setDirectedGraph" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="Krusal1" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="Krusal2" classname="cs311.hw7.graph.AllTests" time="0.0">
      <error>cs311.hw7.graph.IGraph$NoSuchEdgeException
	at cs311.hw7.graph.Graph.getEdgeData(Graph.java:162)
	at cs311.hw7.graph.AllTests.Krusal2(AllTests.java:902)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)

</error>
    </testcase>
    <testcase name="getEdges" classname="cs311.hw7.graph.AllTests" time="0.0"/>
    <testcase name="isDirectedGraph" classname="cs311.hw7.graph.AllTests" time="0.0"/>
  </testsuite>
</testrun>
